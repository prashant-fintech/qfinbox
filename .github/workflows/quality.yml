name: Code Quality

on:
  push:
    branches: [ main, dev ]
  pull_request:
    branches: [ main, dev ]
  schedule:
    - cron: '0 6 * * 1'  # Weekly on Mondays at 6 AM UTC

jobs:
  codacy:
    runs-on: ubuntu-latest
    name: Codacy Analysis
    steps:
    - uses: actions/checkout@v4

    - name: Run Codacy Analysis CLI
      uses: codacy/codacy-analysis-cli-action@master
      with:
        api-token: ${{ secrets.CODACY_API_TOKEN }}
        upload: true
        max-allowed-issues: 2147483647
      continue-on-error: true

  sonarcloud:
    runs-on: ubuntu-latest
    name: SonarCloud Analysis
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.11"

    - name: Install dependencies and run tests
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install -e .
        pytest tests/ --cov=qfinbox --cov-report=xml

    - name: SonarCloud Scan
      uses: SonarSource/sonarcloud-github-action@master
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      continue-on-error: true

  complexity-analysis:
    runs-on: ubuntu-latest
    name: Code Complexity Analysis
    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.11"

    - name: Install analysis tools
      run: |
        python -m pip install --upgrade pip
        pip install radon xenon mccabe

    - name: Cyclomatic Complexity
      run: |
        echo "## Cyclomatic Complexity Analysis" >> complexity_report.md
        echo "Generated on $(date)" >> complexity_report.md
        echo "" >> complexity_report.md
        radon cc src/ --min B --show-complexity || echo "No complex functions found"

    - name: Maintainability Index
      run: |
        echo "" >> complexity_report.md
        echo "## Maintainability Index" >> complexity_report.md
        radon mi src/ --min B || echo "All modules have good maintainability"

    - name: Raw Metrics
      run: |
        echo "" >> complexity_report.md
        echo "## Raw Metrics" >> complexity_report.md
        radon raw src/ || echo "Metrics completed"

    - name: Upload complexity report
      uses: actions/upload-artifact@v3
      with:
        name: complexity-report
        path: complexity_report.md

  type-checking:
    runs-on: ubuntu-latest
    name: Advanced Type Checking
    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.11"

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install mypy types-requests types-python-dateutil
        pip install -e .

    - name: Type check with mypy
      run: |
        mypy src/ --strict --ignore-missing-imports --no-error-summary > mypy_report.txt || echo "Type checking completed"

    - name: Upload type check report
      uses: actions/upload-artifact@v3
      with:
        name: type-check-report
        path: mypy_report.txt

  documentation-quality:
    runs-on: ubuntu-latest
    name: Documentation Quality Check
    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.11"

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pydocstyle interrogate
        pip install -e .

    - name: Check docstring style
      run: |
        pydocstyle src/ --convention=numpy || echo "Docstring check completed"

    - name: Check docstring coverage
      run: |
        interrogate src/ -v --ignore-init-method --ignore-magic --ignore-module --fail-under=60 || echo "Documentation coverage check completed"

    - name: Build docs and check for warnings
      run: |
        cd docs
        make html 2>&1 | tee ../docs_build.log
        if grep -q "WARNING" ../docs_build.log; then
          echo "Documentation build has warnings"
          cat ../docs_build.log
        fi
